#!/bin/sh
export MKL_NUM_THREADS=1
export OMP_NUM_THREADS=1
MPIEXEC_PATH="$1"
MPIEXEC_NP_FLAG="$2"
MPIEXEC_PREFLAGS="$3"
TEST_BINARY_PATH="$4"
TEST_INPUT_DATA_PATH="$5"
final_exit_code=0
DIR=$(dirname "$TEST_BINARY_PATH")
echo "$DIR"

if [ -d "$DIR" ]
then
if [ -f "$TEST_BINARY_PATH" ]
then
      ###############################################################################################################################
      # Scalar-valued tests
      ###############################################################################################################################

    # Square + Quads + Uniform refinement
    if [ $final_exit_code -eq 0 ] 
    then
      for gorder in 1
      do
       for order in 1 2 3
        do
          if [ $order -ge $gorder ]
          then
            echo "$MPIEXEC_PATH $MPIEXEC_NP_FLAG 5 $MPIEXEC_PREFLAGS $TEST_BINARY_PATH -order $order -gorder $gorder -af polynomial -rs uniform"
            $MPIEXEC_PATH $MPIEXEC_NP_FLAG 5 $MPIEXEC_PREFLAGS $TEST_BINARY_PATH -order $order -gorder $gorder -af polynomial -rs uniform
            if [ $? -ne 0 ] 
            then
             final_exit_code=1
             break 2
            fi
          fi
        done
      done
    fi
      
    # Square + Hexas + Uniform refinement
    if [ $final_exit_code -eq 0 ] 
    then
      for gorder in 1
      do
       for order in 1
        do
          if [ $order -ge $gorder ]
          then
            echo "$MPIEXEC_PATH $MPIEXEC_NP_FLAG 5 $MPIEXEC_PREFLAGS $TEST_BINARY_PATH -order $order -gorder $gorder -af polynomial -rs uniform -dim 3"
            $MPIEXEC_PATH $MPIEXEC_NP_FLAG 5 $MPIEXEC_PREFLAGS $TEST_BINARY_PATH -order $order -gorder $gorder -af polynomial -rs uniform -dim 3
            if [ $? -ne 0 ] 
            then
             final_exit_code=1
             break 2
            fi
          fi
        done
      done
    fi
else
  echo "$0: BINARY not found! Value PROVIDED: $1."
  final_exit_code=1
fi
else
  echo "$0: PART not found! Value PROVIDED: $DIR/part."
  final_exit_code=1
fi
rm -Rf $TEST_COMBINATIONS_FILE_NAME
exit $final_exit_code 
