#!/bin/sh
TEST_BINARY_PATH="$1"
TEST_INPUT_DATA_PATH="$2"
TEST_SCRIPTS_PATH="$3"
final_exit_code=0

# Load FEMPAR CLAs
. $TEST_SCRIPTS_PATH/fempar_cla_names

if [ -f "$TEST_BINARY_PATH" ]
then
  if [ -d "$TEST_INPUT_DATA_PATH" ] 
  then
      ###############################################################################################################################
      # Scalar-valued tests
      ###############################################################################################################################

    # Square + Quads    
    if [ $final_exit_code -eq 0 ] 
    then    
        for order in 2
        do
          for constr in .true. .false.
          do
              COMMAND="$TEST_BINARY_PATH $static_triang_generate_from_flag struct_hex_mesh_generator $struct_hex_mesh_generator_num_dims_flag 2 $struct_hex_mesh_generator_num_cells_x_dim_flag 4 4 0 -in_space .true. -order $order -uconstraints $constr"
              echo $COMMAND
              eval $COMMAND
              if [ $? -ne 0 ] 
              then
               final_exit_code=1
               break 3
              fi
          done
        done
    fi

    # Cube + Hexas  
    if [ $final_exit_code -eq 0 ] 
    then     
        for order in 1
        do
          for constr in .true. .false.
          do
              COMMAND="$TEST_BINARY_PATH  $static_triang_generate_from_flag struct_hex_mesh_generator $struct_hex_mesh_generator_num_dims_flag 3 $struct_hex_mesh_generator_num_cells_x_dim_flag 4 4 4 -in_space .true. -order $order -uconstraints $constr"
              echo $COMMAND
              eval $COMMAND
              if [ $? -ne 0 ]
              then
               final_exit_code=1
               break 3
              fi
          done
      done
    fi

    # Square + Tets        
    if [ $final_exit_code -eq 0 ] 
    then
        for order in 1 
        do
            COMMAND="$TEST_BINARY_PATH $static_triang_generate_from_flag mesh_data_files $dir_path_flag $TEST_INPUT_DATA_PATH/square_tetrahedra_3x3.gid $prefix_flag square_tetrahedra_3x3 -in_space .true. -order $order"
            echo $COMMAND
            eval $COMMAND
            if [ $? -ne 0 ] 
            then
             final_exit_code=1
             break 2
            fi
        done
    fi

    # Cube + Tets
    if [ $final_exit_code -eq 0 ] 
    then      
        for order in 1
        do
            COMMAND="$TEST_BINARY_PATH $static_triang_generate_from_flag mesh_data_files $dir_path_flag $TEST_INPUT_DATA_PATH/cube_tetrahedra_3x3.gid $prefix_flag cube_tetrahedra_3x3 -in_space .true. -order $order"
            echo $COMMAND
            eval $COMMAND
            if [ $? -ne 0 ]
            then
             final_exit_code=1
             break 2
            fi
        done
    fi
      
   if [ $final_exit_code -eq 0 ] 
    then      
      COMMAND="$TEST_BINARY_PATH $static_triang_generate_from_flag mesh_data_files $dir_path_flag $TEST_INPUT_DATA_PATH/cube_tetrahedra_5x5_centered.gid $prefix_flag cube_tetrahedra_5x5_centered -in_space .true. -order $order"
      echo $COMMAND
      eval $COMMAND
      if [ $? -ne 0 ]
      then
        final_exit_code=1
      fi
    fi

   else
      echo "$0: input data directory not found!"
      final_exit_code=1
   fi
else
  echo "$0: BINARY not found! Value PROVIDED: $1."
  final_exit_code=1
fi
rm -Rf $TEST_INPUT_FILE
exit $final_exit_code
