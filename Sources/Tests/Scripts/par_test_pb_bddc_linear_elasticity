#!/bin/sh -x
export MKL_NUM_THREADS=1
export OMP_NUM_THREADS=1
MPIEXEC_PATH="$1"
MPIEXEC_NP_FLAG="$2"
MPIEXEC_PREFLAGS="$3"
TEST_BINARY_PATH="$4"
TEST_INPUT_DATA_PATH="$5"
TEST_SCRIPTS_PATH="$6"
final_exit_code=0
DIR=$(dirname "$TEST_BINARY_PATH")

# Load FEMPAR CLAs
. $TEST_SCRIPTS_PATH/fempar_parameters

# Allowed variation (%) in the number of iterations  w.r.t. the reference solution to return a PASSED test
allowed_variation=0.05 
final_exit_code=0

if [ -f "$TEST_BINARY_PATH" ]
then
  if [ -d "$TEST_INPUT_DATA_PATH" ] 
  then
     #test 1
     echo "$MPIEXEC_PATH $MPIEXEC_NP_FLAG 9 $MPIEXEC_PREFLAGS $TEST_BINARY_PATH $triang_generate_flag 1 $prefix_flag 'square' $struct_hex_triang_num_levels_flag 2 $struct_hex_triang_num_dims_flag 3 $struct_hex_triang_num_parts_x_dir_flag 2 2 2 1 1 1 $struct_hex_triang_num_cells_dir_flag 20 20 20 -j 100000000 -i 7 -nc 2 2 2 -npwc 2 2 2 -coarse-handler pb_bddc $coarse_space_use_vertices_flags .false. $coarse_space_use_edges_flag .false. $coarse_space_use_faces_flag .true. -is_a_beam .false. -integration heterogeneous | tee tmp_output "
     $MPIEXEC_PATH $MPIEXEC_NP_FLAG 9 $MPIEXEC_PREFLAGS $TEST_BINARY_PATH $triang_generate_flag 1 $prefix_flag 'square' $struct_hex_triang_num_levels_flag 2 $struct_hex_triang_num_dims_flag 3 $struct_hex_triang_num_parts_x_dir_flag 2 2 2 1 1 1 $struct_hex_triang_num_cells_dir_flag 20 20 20 -j 100000000 -i 7 -nc 2 2 2 -npwc 2 2 2 -coarse-handler pb_bddc $coarse_space_use_vertices_flag .false. $coarse_space_use_edges_flag .false. $coarse_space_use_faces_flag .true. -is_a_beam .false. -integration heterogeneous | tee tmp_output

     # Check Number of iterations is within allowed range 
     exit_code1=0
     n1=$(grep "CG converged to " tmp_output |sed s/" "" "*/"#"/g|cut -f6 -d#)
     n2=$(grep "CG converged to " $TEST_INPUT_DATA_PATH/test1_convergence |sed s/" "" "*/"#"/g|cut -f6 -d#)
    if [ $(python -c "print \"%d\" % (1 if abs($n1-$n2)>$allowed_variation*$n2 else 0)") = 1 ]; then 
	 final_exit_code=1
     fi 
     rm -f tmp_output 

   else
      echo "$0: input data directory not found!"
      final_exit_code=1
   fi
else
  echo "$0: BINARY not found! Value PROVIDED: $4."
  final_exit_code=1
fi

rm -Rf $TEST_COMBINATIONS_FILE_NAME
exit $final_exit_code 

