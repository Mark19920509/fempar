#!/bin/sh
export MKL_NUM_THREADS=1
export OMP_NUM_THREADS=1
MPIEXEC_PATH="$1"
MPIEXEC_NP_FLAG="$2"
MPIEXEC_PREFLAGS="$3"
TEST_BINARY_PATH="$4"
TEST_INPUT_DATA_PATH="$5"
TEST_SCRIPTS_PATH="$6"
final_exit_code=0
DIR=$(dirname "$TEST_BINARY_PATH")

# Load FEMPAR CLAs
. $TEST_SCRIPTS_PATH/fempar_cla_names

if [ -f "$TEST_BINARY_PATH" ]
then

    for order in 1 2 3 
    do  
        if [ $order -eq 1 ] 
        then 
	        for refinement_pattern in even_cells inner_region 
	        do 
	            for num_refinements in 3 4
	            do 
		            for num_parts in 8 9 10 11 12 17 18 19   
		            do 
		                num_tasks=`expr "$num_parts" + 1` 
		                COMMAND="$MPIEXEC_PATH $MPIEXEC_NP_FLAG $num_tasks $MPIEXEC_PREFLAGS $TEST_BINARY_PATH $environment_num_levels_flag 2 $environment_num_tasks_x_level_flag $num_parts 1 $p4est_triang_domains_limits_flag 0.0 1.0 0.0 1.0 -num_refs $num_refinements -order $order -refinement-pattern-case $refinement_pattern"
                                echo $COMMAND
                                eval $COMMAND
		                if [ $? -ne 0 ] 
		                then
                            final_exit_code=1
                            break 4
		                fi
		            done 
	            done 
	        done

	        for refinement_pattern in inner_region 
	        do 
	            for num_refinements in 6 7
	            do 
		            for num_parts in 8 9 10 11 12 17 18 19   
		            do 
		                num_tasks=`expr "$num_parts" + 1` 
		                COMMAND="$MPIEXEC_PATH $MPIEXEC_NP_FLAG $num_tasks $MPIEXEC_PREFLAGS $TEST_BINARY_PATH $environment_num_levels_flag 2 $environment_num_tasks_x_level_flag $num_parts 1 $p4est_triang_domains_limits_flag 0.0 1.0 0.0 1.0 -num_refs $num_refinements -order $order -refinement-pattern-case $refinement_pattern  -use-voids T -use-voids-case quarter"
                                echo $COMMAND
                                eval $COMMAND
		                if [ $? -ne 0 ] 
		                then
                            final_exit_code=1
                            break 4
		                fi
		                COMMAND="$MPIEXEC_PATH $MPIEXEC_NP_FLAG $num_tasks $MPIEXEC_PREFLAGS $TEST_BINARY_PATH $environment_num_levels_flag 2 $environment_num_tasks_x_level_flag $num_parts 1 $p4est_triang_domains_limits_flag 0.0 1.0 0.0 1.0 -num_refs $num_refinements -order $order -refinement-pattern-case $refinement_pattern  -use-voids T -use-voids-case popcorn"
                                echo $COMMAND
                                eval $COMMAND
		                if [ $? -ne 0 ] 
		                then
                            final_exit_code=1
                            break 4
		                fi
		            done 
	            done 
	        done
	    
        else 
            # TESTING high order h_adaptivity for a fixed case 
	        num_tasks=6 
	        num_refinements=3
	        refinement_pattern=even_cells 

	        COMMAND="$MPIEXEC_PATH $MPIEXEC_NP_FLAG $num_tasks $MPIEXEC_PREFLAGS $TEST_BINARY_PATH $environment_num_levels_flag 2 $environment_num_tasks_x_level_flag 5 1 $p4est_triang_domains_limits_flag 0.0 1.0 0.0 1.0 -num_refs $num_refinements -order $order -refinement-pattern-case $refinement_pattern"
                echo $COMMAND
                eval $COMMAND
	        if [ $? -ne 0 ] 
	        then
	            final_exit_code=1
                break 1
	        fi

	        COMMAND="$MPIEXEC_PATH $MPIEXEC_NP_FLAG $num_tasks $MPIEXEC_PREFLAGS $TEST_BINARY_PATH $environment_num_levels_flag 2 $environment_num_tasks_x_level_flag 5 1 $p4est_triang_domains_limits_flag 0.0 1.0 0.0 1.0 -num_refs $num_refinements -order $order -refinement-pattern-case $refinement_pattern -use-voids T -use-voids-case popcorn"
                echo $COMMAND
                eval $COMMAND
	        if [ $? -ne 0 ] 
	        then
	            final_exit_code=1
                break 1
	        fi
            
	        COMMAND="$MPIEXEC_PATH $MPIEXEC_NP_FLAG $num_tasks $MPIEXEC_PREFLAGS $TEST_BINARY_PATH $environment_num_levels_flag 2 $environment_num_tasks_x_level_flag 5 1 $p4est_triang_domains_limits_flag 0.0 1.0 0.0 1.0 -num_refs $num_refinements -order $order -refinement-pattern-case $refinement_pattern -use-voids T -use-voids-case quarter"
                echo $COMMAND
                eval $COMMAND
	        if [ $? -ne 0 ] 
	        then
	            final_exit_code=1
                break 1
	        fi
        fi 
    done 
else
    echo "$0: BINARY not found! Value PROVIDED: $4."
    final_exit_code=1
fi

rm -Rf $TEST_COMBINATIONS_FILE_NAME
exit $final_exit_code 

