#!/bin/sh
export MKL_NUM_THREADS=1
export OMP_NUM_THREADS=1
MPIEXEC_PATH="$1"
MPIEXEC_NP_FLAG="$2"
MPIEXEC_PREFLAGS="$3"
TEST_BINARY_PATH="$4"
TEST_INPUT_DATA_PATH="$5"
TEST_SCRIPTS_PATH="$6"
final_exit_code=0

# Load FEMPAR CLAs
. $TEST_SCRIPTS_PATH/fempar_cla_names

if [ -f "$TEST_BINARY_PATH" ]
then
 if [ -d "$TEST_INPUT_DATA_PATH" ] 
   then

    # Square + Quads
    if [ $final_exit_code -eq 0 ] 
    then
       for order in 1 #2 3
        do
            COMMAND="$MPIEXEC_PATH $MPIEXEC_NP_FLAG 5 $MPIEXEC_PREFLAGS $TEST_BINARY_PATH $prefix_flag 'square' $static_triang_generate_from_flag struct_hex_mesh_generator $struct_hex_mesh_generator_num_dims_flag 2 $struct_hex_mesh_generator_num_cells_x_dim_flag 4 4 0 $struct_hex_mesh_generator_num_levels_flag 2 $struct_hex_mesh_generator_num_parts_x_dim_flag 2 2 0 1 1 0 -order $order"
            echo $COMMAND
            eval $COMMAND
            if [ $? -ne 0 ] 
            then
             final_exit_code=1
             break 2
            fi
        done
    fi

    # Cube + Hexas         
    if [ $final_exit_code -eq 0 ] 
    then
       for order in 1 #2 3
        do
            COMMAND="$MPIEXEC_PATH $MPIEXEC_NP_FLAG 9 $MPIEXEC_PREFLAGS $TEST_BINARY_PATH $prefix_flag 'square' $static_triang_generate_from_flag struct_hex_mesh_generator $struct_hex_mesh_generator_num_dims_flag 3 $struct_hex_mesh_generator_num_cells_x_dim_flag 4 4 4 $struct_hex_mesh_generator_num_levels_flag 2 $struct_hex_mesh_generator_num_parts_x_dim_flag 2 2 2 1 1 1 -order $order"
            echo $COMMAND
            eval $COMMAND
            if [ $? -ne 0 ] 
            then
             final_exit_code=1
             break 2
            fi
        done
    fi

    # Square +  Tetrahedra       
    if [ $final_exit_code -eq 0 ] 
    then
       for order in 1 #2 3
        do
            COMMAND="$MPIEXEC_PATH $MPIEXEC_NP_FLAG 5 $MPIEXEC_PREFLAGS $TEST_BINARY_PATH $dir_path_flag $TEST_INPUT_DATA_PATH/square_tetrahedra.gid $prefix_flag 'square_tetrahedra' $static_triang_generate_from_flag mesh_data_files $struct_hex_mesh_generator_num_dims_flag 2 $struct_hex_mesh_generator_num_cells_x_dim_flag 12 12 0 $struct_hex_mesh_generator_num_levels_flag 3 $struct_hex_mesh_generator_num_parts_x_dim_flag 4 4 0 2 2 0 1 1 0 -order $order"
            echo $COMMAND
            eval $COMMAND
            if [ $? -ne 0 ]
            then
             final_exit_code=1
             break 2
            fi
        done
    fi

    # Cube + Tetrahedra
    if [ $final_exit_code -eq 0 ] 
    then
        for order in 1 2 3
        do
            COMMAND="$MPIEXEC_PATH $MPIEXEC_NP_FLAG 5 $MPIEXEC_PREFLAGS $TEST_BINARY_PATH $dir_path_flag $TEST_INPUT_DATA_PATH/cube_tetrahedra.gid $prefix_flag 'cube_tetrahedra' $static_triang_generate_from_flag mesh_data_files $struct_hex_mesh_generator_num_dims_flag 3 $struct_hex_mesh_generator_num_cells_x_dim_flag 12 12 12 $struct_hex_mesh_generator_num_levels_flag 3 $struct_hex_mesh_generator_num_parts_x_dim_flag 4 4 0 2 2 0 1 1 0 -order $order"
            echo $COMMAND
            eval $COMMAND
            if [ $? -ne 0 ]
            then
             final_exit_code=1
             break 2
            fi
        done
    fi

   else
      echo "$0: input data directory not found!"
      final_exit_code=1
   fi
else
  echo "$0: BINARY not found! Value PROVIDED: $4."
  final_exit_code=1
fi
rm -Rf $TEST_INPUT_FILE
exit $final_exit_code
