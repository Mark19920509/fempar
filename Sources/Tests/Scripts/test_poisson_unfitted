#!/bin/sh
TEST_BINARY_PATH="$1"
TEST_INPUT_DATA_PATH="$2"
TEST_SCRIPTS_PATH="$3"
final_exit_code=0

# Load FEMPAR CLAs
. $TEST_SCRIPTS_PATH/fempar_cla_names

if [ -f "$TEST_BINARY_PATH" ]
then
  if [ -d "$TEST_INPUT_DATA_PATH" ] 
  then
      ###############################################################################################################################
      # Scalar-valued tests
      ###############################################################################################################################

    # Square + Quads        
    if [ $final_exit_code -eq 0 ] 
    then
      for gorder in 1
      do
       for order in 1 2 3
        do
          if [ $order -ge $gorder ]
          then
            COMMAND="$TEST_BINARY_PATH $static_triang_generate_from_flag struct_hex_mesh_generator $struct_hex_triang_num_dims_flag 2 $struct_hex_triang_num_cells_dir_flag 4 4 0 -in_space .true. -order $order -gorder $gorder "
            echo $COMMAND
            eval $COMMAND
            if [ $? -ne 0 ] 
            then
             final_exit_code=1
             break 2
            fi
          fi
        done
      done
    fi

    # Cube + Hexas
    if [ $final_exit_code -eq 0 ] 
    then       
      for gorder in 1
      do
       for order in 1
        do
          if [ $order -ge $gorder ]
          then
            COMMAND="$TEST_BINARY_PATH  $static_triang_generate_from_flag struct_hex_mesh_generator $struct_hex_triang_num_dims_flag 3 $struct_hex_triang_num_cells_dir_flag 4 4 4 -in_space .true. -order $order -gorder $gorder"
            echo $COMMAND
            eval $COMMAND
            if [ $? -ne 0 ]
            then
             final_exit_code=1
             break 2
            fi
          fi
        done
      done
    fi

    # Square + Tets
    if [ $final_exit_code -eq 0 ] 
    then        
      for gorder in 1
      do
       for order in 1 2 3
        do
          for nelem in 3 5 10
          do
            if [ $order -ge $gorder ]
            then
              COMMAND="$TEST_BINARY_PATH $static_triang_generate_from_flag mesh_data_files $dir_path_flag $TEST_INPUT_DATA_PATH/square_tetrahedra_"$nelem"x"$nelem".gid $prefix_flag square_tetrahedra_"$nelem"x"$nelem" $struct_hex_triang_num_dims_flag 2 -in_space .true. -order $order -gorder $gorder "
              echo $COMMAND
              eval $COMMAND
              if [ $? -ne 0 ] 
              then
               final_exit_code=1
               break 3
              fi
            fi
          done
        done
      done
    fi

    # Cube + Tets
    if [ $final_exit_code -eq 0 ] 
    then      
      for gorder in 1
      do
       for order in 1
        do
          for nelem in 3 5 10
          do
            if [ $order -ge $gorder ]
            then
              COMMAND="$TEST_BINARY_PATH  $static_triang_generate_from_flag mesh_data_files $dir_path_flag $TEST_INPUT_DATA_PATH/cube_tetrahedra_"$nelem"x"$nelem".gid $prefix_flag cube_tetrahedra_"$nelem"x"$nelem" $struct_hex_triang_num_dims_flag 3 -in_space .true. -order $order -gorder $gorder"
              echo $COMMAND
              eval $COMMAND
              if [ $? -ne 0 ]
              then
               final_exit_code=1
               break 3
              fi
            fi
          done
        done
      done
    fi

    if [ $final_exit_code -eq 0 ] 
    then
      order=1
      gorder=1
      nelem=3
      if [ $order -ge $gorder ]
      then
        COMMAND="$TEST_BINARY_PATH  $static_triang_generate_from_flag mesh_data_files $dir_path_flag $TEST_INPUT_DATA_PATH/cube_tetrahedra_"$nelem"x"$nelem".gid $prefix_flag cube_tetrahedra_"$nelem"x"$nelem" $struct_hex_triang_num_dims_flag 3 -in_space .true. -order $order -gorder $gorder"
        echo $COMMAND
        eval $COMMAND
        if [ $? -ne 0 ]
        then
          final_exit_code=1
        fi
      fi
    fi

   else
      echo "$0: input data directory not found!"
      final_exit_code=1
   fi
else
  echo "$0: BINARY not found! Value PROVIDED: $1."
  final_exit_code=1
fi
rm -Rf $TEST_INPUT_FILE
exit $final_exit_code
